* Options:
*     follow redirect: true
* ------------------------------------------------------------------------------
* Executing entry 1
*
* Cookie store:
*
* Request:
* GET http://localhost:8000/very-verbose/redirect
*
* Request can be run with the following curl command:
* curl --location 'http://localhost:8000/very-verbose/redirect'
*
**   Trying 127.0.0.1:8000...
** Connected to localhost (127.0.0.1) port 8000 (#0)
> GET /very-verbose/redirect HTTP/1.1
> Host: localhost:8000
> Accept: */*
> User-Agent: hurl/<<<.*?>>>
>
* Request body:
*
** Mark bundle as not supporting multiuse
** Closing connection 0
* Response: (received 205 bytes in <<<\d+>>> ms)
*
< HTTP/1.1 301 MOVED PERMANENTLY
< Server: Werkzeug/<<<.*?>>> Python/<<<.*?>>>
< Date: <<<.*?>>>
< Content-Type: text/html; charset=utf-8
< Content-Length: 205
< Location: /very-verbose/redirected
< Server: Flask Server
< Connection: close
<
* Response body:
* <html>
* <head>
*     <meta content="text/html;charset=utf-8">
*     <title>301 Moved</title>
* </head>
* <body>
* <h1>301 Moved</h1>
* The document has moved
* <a href="/very-verbose/redirected">here</a>.
* </body>
* </html>
*
* Timings:
* begin: <<<.*?>>> UTC
* end: <<<.*?>>> UTC
* namelookup: <<<.*?>>> µs
* connect: <<<.*?>>> µs
* app_connect: <<<.*?>>> µs
* pre_transfer: <<<.*?>>> µs
* start_transfer: <<<.*?>>> µs
* total: <<<.*?>>> µs
*
* => Redirect to http://localhost:8000/very-verbose/redirected
*
** Hostname localhost was found in DNS cache
**   Trying 127.0.0.1:8000...
** Connected to localhost (127.0.0.1) port 8000 (#1)
> GET /very-verbose/redirected HTTP/1.1
> Host: localhost:8000
> Accept: */*
> User-Agent: hurl/<<<.*?>>>
>
* Request body:
*
** Mark bundle as not supporting multiuse
** Closing connection 1
* Response: (received 11 bytes in <<<\d+>>> ms)
*
< HTTP/1.1 200 OK
< Server: Werkzeug/<<<.*?>>> Python/<<<.*?>>>
< Date: <<<.*?>>>
< Content-Type: text/html; charset=utf-8
< Content-Length: 11
< Server: Flask Server
< Connection: close
<
* Response body:
* Redirected.
*
* Timings:
* begin: <<<.*?>>> UTC
* end: <<<.*?>>> UTC
* namelookup: <<<.*?>>> µs
* connect: <<<.*?>>> µs
* app_connect: <<<.*?>>> µs
* pre_transfer: <<<.*?>>> µs
* start_transfer: <<<.*?>>> µs
* total: <<<.*?>>> µs
*
* ------------------------------------------------------------------------------
* Executing entry 2
*
* Cookie store:
*
* Request:
* GET http://localhost:8000/very-verbose/encoding/latin1
*
* Request can be run with the following curl command:
* curl --location 'http://localhost:8000/very-verbose/encoding/latin1'
*
** Hostname localhost was found in DNS cache
**   Trying 127.0.0.1:8000...
** Connected to localhost (127.0.0.1) port 8000 (#2)
> GET /very-verbose/encoding/latin1 HTTP/1.1
> Host: localhost:8000
> Accept: */*
> User-Agent: hurl/<<<.*?>>>
>
* Request body:
*
** Mark bundle as not supporting multiuse
** Closing connection 2
* Response: (received 4 bytes in <<<\d+>>> ms)
*
< HTTP/1.1 200 OK
< Server: Werkzeug/<<<.*?>>> Python/<<<.*?>>>
< Date: <<<.*?>>>
< Content-Type: text/html; charset=ISO-8859-1
< Content-Length: 4
< Server: Flask Server
< Connection: close
<
* Response body:
* café
*
* Timings:
* begin: <<<.*?>>> UTC
* end: <<<.*?>>> UTC
* namelookup: <<<.*?>>> µs
* connect: <<<.*?>>> µs
* app_connect: <<<.*?>>> µs
* pre_transfer: <<<.*?>>> µs
* start_transfer: <<<.*?>>> µs
* total: <<<.*?>>> µs
*
* ------------------------------------------------------------------------------
* Executing entry 3
*
* Cookie store:
*
* Request:
* POST http://localhost:8000/very-verbose/compressed/brotli
* Accept-Encoding: brotli
*
* Request can be run with the following curl command:
* curl --header 'Accept-Encoding: brotli' --header 'Content-Type: application/json' --data $'{\n    "foo": "bar",\n    "baz": true\n}' --location 'http://localhost:8000/very-verbose/compressed/brotli'
*
** Hostname localhost was found in DNS cache
**   Trying 127.0.0.1:8000...
** Connected to localhost (127.0.0.1) port 8000 (#3)
> POST /very-verbose/compressed/brotli HTTP/1.1
> Host: localhost:8000
> Accept: */*
> Accept-Encoding: brotli
> Content-Type: application/json
> User-Agent: hurl/<<<.*?>>>
> Content-Length: 37
>
* Request body:
* {
*     "foo": "bar",
*     "baz": true
* }
** We are completely uploaded and fine
** Mark bundle as not supporting multiuse
** Closing connection 3
* Response: (received 17 bytes in <<<\d+>>> ms)
*
< HTTP/1.1 200 OK
< Server: Werkzeug/<<<.*?>>> Python/<<<.*?>>>
< Date: <<<.*?>>>
< Content-Type: text/html; charset=utf-8
< Content-Length: 17
< Content-Encoding: br
< Server: Flask Server
< Connection: close
<
* Response body:
* Hello World!
*
* Timings:
* begin: <<<.*?>>> UTC
* end: <<<.*?>>> UTC
* namelookup: <<<.*?>>> µs
* connect: <<<.*?>>> µs
* app_connect: <<<.*?>>> µs
* pre_transfer: <<<.*?>>> µs
* start_transfer: <<<.*?>>> µs
* total: <<<.*?>>> µs
*
* ------------------------------------------------------------------------------
* Executing entry 4
*
* Cookie store:
*
* Request:
* GET http://localhost:8000/very-verbose/cat
*
* Request can be run with the following curl command:
* curl --location 'http://localhost:8000/very-verbose/cat'
*
** Hostname localhost was found in DNS cache
**   Trying 127.0.0.1:8000...
** Connected to localhost (127.0.0.1) port 8000 (#4)
> GET /very-verbose/cat HTTP/1.1
> Host: localhost:8000
> Accept: */*
> User-Agent: hurl/<<<.*?>>>
>
* Request body:
*
** Mark bundle as not supporting multiuse
** Closing connection 4
* Response: (received 25992 bytes in <<<\d+>>> ms)
*
< HTTP/1.1 200 OK
< Server: Werkzeug/<<<.*?>>> Python/<<<.*?>>>
< Date: <<<.*?>>>
< Content-Type: image/jpeg
< Content-Length: 25992
< Server: Flask Server
< Connection: close
<
* Response body:
* Bytes <f198388ba26c2c53005f24643826384f15ba905b8ca070a470b61885c6639f8bbfe63fcee5fb498a630249e499e4eddcc9ca793406c14d02c97107e09c7af57a...>
*
* Timings:
* begin: <<<.*?>>> UTC
* end: <<<.*?>>> UTC
* namelookup: <<<.*?>>> µs
* connect: <<<.*?>>> µs
* app_connect: <<<.*?>>> µs
* pre_transfer: <<<.*?>>> µs
* start_transfer: <<<.*?>>> µs
* total: <<<.*?>>> µs
*
* ------------------------------------------------------------------------------
* Executing entry 5
*
* Cookie store:
*
* Request:
* POST http://localhost:8000/very-verbose/update-cat
* [MultipartFormData]
* cat: file,cat.jpg; image/jpeg
*
* Request can be run with the following curl command:
* curl --form 'cat=@tests_ok<<<.*?>>>cat.jpg;type=image/jpeg' --location 'http://localhost:8000/very-verbose/update-cat'
*
** Hostname localhost was found in DNS cache
**   Trying 127.0.0.1:8000...
** Connected to localhost (127.0.0.1) port 8000 (#5)
> POST /very-verbose/update-cat HTTP/1.1
> Host: localhost:8000
> Accept: */*
> User-Agent: hurl/<<<.*?>>>
> Content-Length: 265<<<.*?>>>
> Content-Type: multipart/form-data; boundary=<<<.*?>>><<<.*?>>>
>
* Request body:
* Bytes <<<<.*?>>><<<.*?>>>...>
** We are completely uploaded and fine
** Mark bundle as not supporting multiuse
** Closing connection 5
* Response: (received 0 bytes in <<<\d+>>> ms)
*
< HTTP/1.1 200 OK
< Server: Werkzeug/<<<.*?>>> Python/<<<.*?>>>
< Date: <<<.*?>>>
< Content-Type: text/html; charset=utf-8
< Content-Length: 0
< Server: Flask Server
< Connection: close
<
* Response body:
*
*
* Timings:
* begin: <<<.*?>>> UTC
* end: <<<.*?>>> UTC
* namelookup: <<<.*?>>> µs
* connect: <<<.*?>>> µs
* app_connect: <<<.*?>>> µs
* pre_transfer: <<<.*?>>> µs
* start_transfer: <<<.*?>>> µs
* total: <<<.*?>>> µs
*
* ------------------------------------------------------------------------------
* Executing entry 6
*
* Cookie store:
*
* Request:
* GET http://localhost:8000/very-verbose/done
* x-foo: bar
*
* Request can be run with the following curl command:
* curl --header 'x-foo: bar' --location 'http://localhost:8000/very-verbose/done'
*
** Hostname localhost was found in DNS cache
**   Trying 127.0.0.1:8000...
** Connected to localhost (127.0.0.1) port 8000 (#6)
> GET /very-verbose/done HTTP/1.1
> Host: localhost:8000
> Accept: */*
> x-foo: bar
> User-Agent: hurl/<<<.*?>>>
>
* Request body:
*
** Mark bundle as not supporting multiuse
** Closing connection 6
* Response: (received 4 bytes in <<<\d+>>> ms)
*
< HTTP/1.1 200 OK
< Server: Werkzeug/<<<.*?>>> Python/<<<.*?>>>
< Date: <<<.*?>>>
< Content-Type: text/html; charset=utf-8
< Content-Length: 4
< Server: Flask Server
< Connection: close
<
* Response body:
* Done
*
* Timings:
* begin: <<<.*?>>> UTC
* end: <<<.*?>>> UTC
* namelookup: <<<.*?>>> µs
* connect: <<<.*?>>> µs
* app_connect: <<<.*?>>> µs
* pre_transfer: <<<.*?>>> µs
* start_transfer: <<<.*?>>> µs
* total: <<<.*?>>> µs
*
