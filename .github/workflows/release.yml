name: release

on: [pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  release-generic-linux-x64:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install
      run: |
        bin/install_prerequisites_ubuntu.sh
        bin/install_rust_latest.sh
    - name: set Version
      run: bin/release/version.sh
    - name: Build
      run: |
        bin/release/man.sh       
        bin/release/release.sh
    - name: Create generic linux package
      run: bin/release/create_tarball.sh linux
    - name: Archive production artifacts (tarball)
      uses: actions/upload-artifact@v3
      with:
        name: release-generic-linux-x64-artifacts
        path: target/upload/*

  release-deb-x64:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install
      run: |
        bin/install_prerequisites_ubuntu.sh
        bin/install_rust_latest.sh
    - name: set Version
      run: bin/release/version.sh
    - name: Build
      run: |
        bin/release/man.sh
        bin/release/release.sh
    - name: Create deb package
      run: bin/release/deb.sh
    - name: Archive production artifacts (tarball)
      uses: actions/upload-artifact@v3
      with:
        name: release-deb-x64-artifacts
        path: target/upload/*

  release-macos-x64:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install Rust
      run: bin/install_rust_latest.sh
    - name: set Version
      run: bin/release/version.sh
    - name: Build
      run: |
        bin/release/man.sh
        bin/release/release.sh
        bin/release/create_tarball.sh macos
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-macos-x64-artifacts
        path: target/upload/*
 
  release-windows-x64:
    runs-on: windows-latest
    env:
      VCPKGRS_DYNAMIC: 1
    steps:
    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: C:\vcpkg\installed
        key: ${{ runner.os }}-release-windows-x64-${{ github.sha }}
        restore-keys: ${{ runner.os }}-release-windows-x64-
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
    - name: Environment
      run: .\bin\environment.ps1
    - name: Install prerequisites
      run: .\bin\install_prerequisites_windows.ps1
    - name: Build and test integ
      run: |
        .\bin\release\release.ps1
        .\bin\test\test_prerequisites.ps1
        .\bin\test\test_integ.ps1
    - name: Create windows64 Zip package
      run: .\bin\release\create_windows64_zip_package.ps1
    - name: Install win64 zip and test integ
      run: |
        .\bin\test\test_prerequisites.ps1
        .\bin\release\install_windows64_zip_package.ps1
        .\bin\test\test_integ.ps1
    - name: Create windows64 installer
      run: .\bin\release\create_windows64_installer.ps1
    - name: Install win64 installer and test integ
      run: |
        .\bin\test\test_prerequisites.ps1
        .\bin\release\install_windows64_installer.ps1
        .\bin\test\test_integ.ps1
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-windows-x64-artifacts
        path: |
          .\target\win-package\hurl-*-installer.exe
          .\target\win-package\hurl-*-win64.zip
